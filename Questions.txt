what is , snark the whole chain ?
How arrays storage slot looks like
How to decode a abi.encodePacked data types

difference between a 'collision attack' and a 'preimage attack' - It is harder to engineer an attack without a known preimage
Where does metamask store the private key ?
How metamask new account creation works
How a social recovery wallet works end to end
why dont we aumtoically define the Data location for Reference type as it always be memory 
what is signature malleability or replay attacks - https://www.cyfrin.io/blog/replay-attack-in-ethereum#prerequisites-to-understand-replay-attacks
Need to check when destructing from a direct struct and a function returning a struct
-> what is bootloader in zksync
-> how oracle price manipulation works
-> What is chain Abstraction
-> how 5 level security of Chain link works
-> How to use soldeer - solidity package manager build along with foundry
-> chain abstraction is risk abstraction
-> centralized sequencer in L2s
-> How tornado uses zksnarks and how mixing will be done 
-> How to approve a erc20 token from a transaction initiated from a contract
-> what is gas griefing attack
-> Does event emitted in blockchain is store in blockchain state ?
-> what is read only reentrancy
-> What are post deployment practises 
-> Request solidity team to provide abi.decodePacked if possible
-> What is Differential Testing
-> What is formal verification
-> How to generate scope.csv file using cloc and moving it to notion
-> if we have static list of addresses then we can use merkle proofs to prove them by storing root in the contract
   but what if we have dynamic list of addresses that are increasing daily then we need to generate root each time a user is being added , how to tackle this 
-> what is enumarableset in openzeppelin
-> Difference between read only reentrancy and normal reentrancy and crossfunction reentrancy
-> How miners can able to manipulate the block.timestamp in contracts for a couple of seconds






# https://www.vigilseek.com/
# solana - https://github.com/slowmist/solana-smart-contract-security-best-practices




